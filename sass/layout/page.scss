/**
 * Sitewide page definition, as well as transitions
 *
 *
 * Styleguide 1
 */

* {
  outline: none;
  margin: 0;
  padding: 0;
}
body {
  padding-top: $headerHeightDesktop;
}

.stage {
  width: 100%;
  max-width: $widthDesktop;
  margin: 0 auto;
  @extend .clearfix;
  overflow-x: hidden;
}
.modal {
  top: -100%;
  @include transition(top $pageTransitionTime ease-out);
}
.page > .timeline {
  @include col(19.5);
}

@media screen and (max-width: $widthTablet) {
  body {
    padding-top: $headerHeightTablet;
  }
  .page {
    @include transition(all $pageTransitionTime ease-out);
    // prevent iPhone flickering
    -webkit-backface-visibility: hidden;
  }
  .page.extra {
    top: $headerHeightTablet;
    padding-top: 15px;
    z-index: 4;
    background: $white;
  }
  .page > .sidebar {
    @include col($sidebarWidthTablet);
    @include transition(all $pageTransitionTime ease-out);
    visibility: hidden;
    position: absolute;
    // prevent iPhone flickering
    -webkit-backface-visibility: hidden;
  }
  .sidebar-open {
    overflow-x:hidden;
    .sidebar {
      visibility: visible;
    }
  }
  .page > .timeline {
    @include transition(all $pageTransitionTime ease-out);
    left: 0 !important;
  }
  
  // hardware accelarated (class gets added if passes Modernizr)
  .csstransforms3d {
    .page.main {
      @include transform(translateX(0%) translateZ(0));
    }
    .page.extra {
      @include transform(translateX(100%) translateZ(0));
    }
    .modal-open {
      .main {
        @include transform(translateX(-100%));
      }
      .extra {
        @include transform(translateX(0%));
      }
    }

    // sidebar / timeline with sidebar hidden
    .sidebar {
      @include transform(translateX(-100%) translateZ(0));
    }
    .page > .timeline {
      @include transform(translateX(0%) translateZ(0));
    }
    // sidebar / timeline when sidebar is displayed:
    .sidebar-open {
      .sidebar {
        @include transform(translateX(0));
      }
      .page > .timeline {
        @include transform(translateX(percentage($sidebarWidthTablet/$numColumns)));
      }
    }
  }

  // no hardware acc. support: simply replace the view, without animation
  .no-csstransforms3d {
    .page.main {
      left: 0;
    }
    .page.extra {
      left: 100%;
    }
    .modal-open {
      .main {
        left: -100%;
      }
      .extra {
        left: 0;
      }
    }
    // sidebar
    .sidebar {
      @include left(-$sidebarWidthTablet);
    }
    .sidebar-open {
      .sidebar {
        left: 0;
      }
    }
    // timeline
    .page > .timeline {
      @include left(0);
      @include transition(left $pageTransitionTime ease-out);
    }
    .sidebar-open .page > .timeline {
      @include left($sidebarWidthTablet);
    }
  }
}
@media screen and (max-width: $widthMiniTablet) {
  body {
    padding-top: $headerHeightMiniTablet;
  }
  .modal-open .page.extra {
    top: $headerHeightMiniTablet;
  }
  .page > .sidebar {
    @include col($sidebarWidthMiniTablet);
  }
  .csstransforms3d {
    .sidebar-open {
      .page > .timeline {
        @include transform(translateX(percentage($sidebarWidthMiniTablet/$numColumns)));
      }
    }
  }
  .no-csstransforms3d {
    .page > .sidebar {
      @include left(-$sidebarWidthMiniTablet);
    }
    .page > .timeline {
      @include left(0);
    }
    .sidebar-open {
      .page > .sidebar {
        left: 0;
      }
      .page > .timeline {
        @include left($sidebarWidthMiniTablet);
      }
    }
  }
}

@media screen and (max-width: $widthSmartphone) {
  body {
    padding-top: $headerHeightSmartphone;
  }
  .page.extra {
    top: $headerHeightSmartphone;
  }
  .page > .sidebar {
    @include col($sidebarWidthSmartphone);
  }
  .csstransforms3d {
    .sidebar-open {
      .page > .timeline {
        @include transform(translateX(percentage($sidebarWidthSmartphone/$numColumns)));
      }
    }
  }
  .no-csstransforms3d {
    .page > .sidebar {
      @include left(-$sidebarWidthSmartphone);
    }
    .page > .timeline {
      @include left(0);
    }
    .sidebar-open {
      .page > .sidebar {
        left: 0;
      }
      .page > .timeline {
        @include left($sidebarWidthSmartphone);
      }
    }
  }
}